"use strict";
function setHintColor(args) {
    if (args.view.android) {
        args.view.android.setHintTextColor(args.color.android);
    }
    if (args.view.ios) {
        var dictionary = new NSDictionary([args.color.ios], [NSForegroundColorAttributeName]);
        //resolves to a UITextField   then .attributedPlaceholder
        args.view.ios.attributedPlaceholder = NSAttributedString.alloc().initWithStringAttributes(args.view.hint, dictionary);
    }
}
exports.setHintColor = setHintColor;
// Above, args.color.ios resolves to a UIColor, and args.view.ios resolves to a UITextField. 
// Once we have a reference to these controls we can set native properties on them directly in TypeScript, which this code does with the UITextFieldâ€™s attributedPlaceholder property. 
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGludC11dGlsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaGludC11dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFPQSxzQkFBNkIsSUFBdUM7SUFDbEUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDekQsQ0FBQztJQUNELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNsQixJQUFJLFVBQVUsR0FBRyxJQUFJLFlBQVksQ0FDL0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUNoQixDQUFDLDhCQUE4QixDQUFDLENBQy9CLENBQUM7UUFDSix5REFBeUQ7UUFDekQsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMscUJBQXFCLEdBQUcsa0JBQWtCLENBQUMsS0FBSyxFQUFFLENBQUMsd0JBQXdCLENBQ3ZGLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7QUFDSCxDQUFDO0FBYmUsb0JBQVksZUFhM0IsQ0FBQTtBQUNELDZGQUE2RjtBQUM3RixzTEFBc0wiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb2xvciB9IGZyb20gXCJjb2xvclwiO1xuaW1wb3J0IHsgVGV4dEZpZWxkIH0gZnJvbSBcInVpL3RleHQtZmllbGRcIjtcblxuZGVjbGFyZSB2YXIgTlNBdHRyaWJ1dGVkU3RyaW5nOiBhbnk7XG5kZWNsYXJlIHZhciBOU0RpY3Rpb25hcnk6IGFueTtcbmRlY2xhcmUgdmFyIE5TRm9yZWdyb3VuZENvbG9yQXR0cmlidXRlTmFtZTogYW55O1xuXG5leHBvcnQgZnVuY3Rpb24gc2V0SGludENvbG9yKGFyZ3M6IHsgdmlldzogVGV4dEZpZWxkLCBjb2xvcjogQ29sb3IgfSkge1xuICBpZiAoYXJncy52aWV3LmFuZHJvaWQpIHtcbiAgICBhcmdzLnZpZXcuYW5kcm9pZC5zZXRIaW50VGV4dENvbG9yKGFyZ3MuY29sb3IuYW5kcm9pZCk7XG4gIH1cbiAgaWYgKGFyZ3Mudmlldy5pb3MpIHtcbiAgICBsZXQgZGljdGlvbmFyeSA9IG5ldyBOU0RpY3Rpb25hcnkoXG4gICAgICBbYXJncy5jb2xvci5pb3NdLFxuICAgICAgW05TRm9yZWdyb3VuZENvbG9yQXR0cmlidXRlTmFtZV1cbiAgICAgICk7XG4gICAgLy9yZXNvbHZlcyB0byBhIFVJVGV4dEZpZWxkICAgdGhlbiAuYXR0cmlidXRlZFBsYWNlaG9sZGVyXG4gICAgYXJncy52aWV3Lmlvcy5hdHRyaWJ1dGVkUGxhY2Vob2xkZXIgPSBOU0F0dHJpYnV0ZWRTdHJpbmcuYWxsb2MoKS5pbml0V2l0aFN0cmluZ0F0dHJpYnV0ZXMoXG4gICAgICBhcmdzLnZpZXcuaGludCwgZGljdGlvbmFyeSk7XG4gIH0gXG59XG4vLyBBYm92ZSwgYXJncy5jb2xvci5pb3MgcmVzb2x2ZXMgdG8gYSBVSUNvbG9yLCBhbmQgYXJncy52aWV3LmlvcyByZXNvbHZlcyB0byBhIFVJVGV4dEZpZWxkLiBcbi8vIE9uY2Ugd2UgaGF2ZSBhIHJlZmVyZW5jZSB0byB0aGVzZSBjb250cm9scyB3ZSBjYW4gc2V0IG5hdGl2ZSBwcm9wZXJ0aWVzIG9uIHRoZW0gZGlyZWN0bHkgaW4gVHlwZVNjcmlwdCwgd2hpY2ggdGhpcyBjb2RlIGRvZXMgd2l0aCB0aGUgVUlUZXh0RmllbGTigJlzIGF0dHJpYnV0ZWRQbGFjZWhvbGRlciBwcm9wZXJ0eS4iXX0=